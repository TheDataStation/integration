name: 'Integrate user register and its backend'
description: "install and basic test of user register with backend"
inputs:
  database_service_commit:
    description: "branch/commit of database_service to test"
    required: false
    default: 'main'
  database_service_repository:
    description: "Repository of database_service to test"
    required: false
    default: 'TheDataStation/database_service'
  user_register_commit:
    description: "branch/commit of user_register to test"
    required: false
    default: 'main'
  user_register_repository:
    description: "repository of user_register to test"
    required: false
    default: 'TheDataStation/user_register'
runs:
  using: composite
  steps:
    - run: echo user register and backend database_service integration test
      shell: bash
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.user_register_repository }}
        ref: ${{ inputs.user_register_commit }}
        path: user_register
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.database_service_repository }}
        ref: ${{ inputs.database_service_commit }}
        path: database_service
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: install requirements.txt from both components together
      shell: bash
      run: |
        pip install -r user_register/requirements.txt -r database_service/requirements.txt
        cd database_service && python3 DatabaseServer.py &
        cd user_register && uvicorn main:app --reload &

        # now wait for this to become responsive to connections for 30 seconds
        wget http://127.0.0.1:8000/ --retry-connrefused --tries 30 --waitretry=1

        # Fall off the end without killing the processes explicitly.
        # uvicorn does not shut down in response to signals:
        # https://stackoverflow.com/questions/60424390/is-there-a-way-to-kill-uvicorn-cleanly

        echo done

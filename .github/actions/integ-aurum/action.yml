name: 'Integrate user register and its backend'
description: "install and basic test of user register with backend"
inputs:

  integration_commit:
    description: "branch/commit of integration repo to test"
    required: false
    default: 'master'
  integration_repository:
    description: "Repository of integration repo to test"
    required: false
    default: 'TheDataStation/integration'

  ddprofiler_commit:
    description: "branch/commit of ddprofiler repo to test"
    required: false
    default: 'main'
  ddprofiler_repository:
    description: "Repository of ddprofiler repo to test"
    required: false
    default: 'TheDataStation/ddprofiler'


  nbc_commit:
    description: "branch/commit of ddprofiler repo to test"
    required: false
    default: 'main'
  nbc_repository:
    description: "Repository of ddprofiler repo to test"
    required: false
    default: 'TheDataStation/ddprofiler'

  aurum_commit:
    description: "branch/commit of aurum repo to test"
    required: false
    default: 'benc-blindml-integration'
  aurum_repository:
    description: "Repository of aurum repo to test"
    required: false
    default: 'TheDataStation/aurum-dod-staging'


runs:
  using: composite
  steps:
    - run: echo former aurum-repo components integration test
      shell: bash
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.integration_repository }}
        ref: ${{ inputs.integration_commit }}
        path: integration
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.ddprofiler_repository }}
        ref: ${{ inputs.ddprofiler_commit }}
        path: ddprofiler
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.nbc_repository }}
        ref: ${{ inputs.nbc_commit }}
        path: nbc
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.aurum_repository }}
        ref: ${{ inputs.aurum_commit }}
        path: aurum-dod-staging
    # - uses: actions/checkout@v2
    #  with:
    #    repository: ${{ inputs.user_register_repository }}
    #    ref: ${{ inputs.user_register_commit }}
    #    path: user_register
    #- uses: actions/checkout@v2
    #  with:
    #    repository: ${{ inputs.database_service_repository }}
    #    ref: ${{ inputs.database_service_commit }}
    #    path: database_service
    - name: docker compose build and bring containers up
      shell: bash
      run: |
        echo Building
        docker-compose -f integration/docker-compose.aurum.yaml build

        # prepare the mount points - if docker creates them itself, then
        # they end up with the wrong permissions
        mkdir data
        mkdir data/elasticsearch
        chmod a+rwx data/elasticsearch
        chmod +t data/elasticsearch

        echo Bringing containers up
        docker-compose -f ./docker-compose.aurum.yaml up --abort-on-container-exit
        echo done

